<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
	<ModulePrefs title="Hangout Starter">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
	<Content type="html"><![CDATA[
<html>
<style type="text/css">
<!--
	td {
	  border: 2px solid black;
	  font-size: 48pt;
	  text-align: center;
	}

	.square {
	  /*padding: 10px;*/
	  width: 100px;
	  height: 100px;
	}

.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);
  border: 1px solid #bbb;
}
.button:active {
	background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333));
	background: -moz-linear-gradient(bottom, #ddd, #aaa); }
-->
</style>
<body>

	<table>
		<tr>
			<td id="sq1a" class="square"></td>
			<td id="sq1b" class="square"></td>
			<td id="sq1c" class="square"></td>
		</tr>

		<tr>
			<td id="sq2a" class="square"></td>
			<td id="sq2b" class="square"></td>
			<td id="sq2c" class="square"></td>
		</tr>

		<tr>
			<td id="sq3a" class="square"></td>
			<td id="sq3b" class="square"></td>
			<td id="sq3c" class="square"></td>
		</tr>

	</table>

<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
<h3>Hangout Tic Tac Toe App</h3>
<p>
<input class="button" type="button" value="Show participants!" id="showParticipants"
    style="visibility:hidden;"
    onClick="showParticipants()"/>
</p>
<div id="participantsDiv"></div>
<hr>
<div id="myLog"></div>
<hr>
<p><a href="http://developers.google.com/+/hangouts/getting-started">Read the docs</a> to learn more about developing hangouts!</a></p>

<script>
function showParticipants() {
  var participants = gapi.hangout.getParticipants();
  var retVal = '<p>Participants: </p><ul>';
  for (var index in participants) {
    var participant = participants[index];
    if (!participant.person) {
      retVal += '<li>A participant not running this app</li>';
    }
    retVal += '<li>' + participant.person.displayName + '</li>';
  }
  retVal += '</ul>';
  var div = document.getElementById('participantsDiv');
  div.innerHTML = retVal;
}
function init() {
  // When API is ready...
  gapi.hangout.onApiReady.add(
      function(eventObj) {
        if (eventObj.isApiReady) {
          document.getElementById('showParticipants')
            .style.visibility = 'visible';
        }
      });
}
// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);

// tic-tac-toe

function showParticipants() {
  var participants = gapi.hangout.getParticipants();
  var retVal = '<p>Participants: </p><ul>';
  for (var index in participants) {
    var participant = participants[index];
    if (!participant.person) {
      retVal += '<li>A participant not running this app</li>';
    }
    retVal += '<li>' + participant.person.displayName + '</li>';
  }
  retVal += '</ul>';

	retVal += "<p>hello</p>";

  var div = document.getElementById('participantsDiv');
  div.innerHTML = retVal;

}
function init() {
  // When API is ready...
  gapi.hangout.onApiReady.add(
      function(eventObj) {
        if (eventObj.isApiReady) {
          document.getElementById('showParticipants')
            .style.visibility = 'visible';
        }
      });
}
// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);

//Tic-tac-toe

var row1x = 0,
row2x = 0,
row3x = 0,
columnAx = 0,
columnBx = 0,
columnCx = 0,
diagonal1x = 0,
diagonal2x = 0,

row1o = 0,
row2o = 0,
row3o = 0,
columnAo = 0,
columnBo = 0,
columnCo = 0,
diagonal1o = 0,
diagonal2o = 0,

counter = 0;

var playerX = function () {
  if (row1x === 3) {alert("X wins!"); }
  if (row2x === 3) {alert("X wins!"); }
  if (row3x === 3) {alert("X wins!"); }

  if (columnAx === 3) {alert("X wins!"); }
  if (columnBx === 3) {alert("X wins!"); }
  if (columnCx === 3) {alert("X wins!"); }

  if (diagonal1x === 3) {alert("X wins!"); }
  if (diagonal2x === 3) {alert("X wins!"); }
  if (counter === 9) {alert("Cat's game."); }
};

var playerO = function () {
  if (row1o === 3) {alert("O wins!"); }
  if (row2o === 3) {alert("O wins!"); }
  if (row3o === 3) {alert("O wins!"); }

  if (columnAo === 3) {alert("O wins!"); }
  if (columnBo === 3) {alert("O wins!"); }
  if (columnCo === 3) {alert("O wins!"); }

  if (diagonal1o === 3) {alert("O wins!"); }
  if (diagonal2o === 3) {alert("O wins!"); }
  if (counter === 9) {alert("Cat's game."); }
};

gapi.hangout.onApiReady.add(function(eventObj) {
	gapi.hangout.data.submitDelta( {
		'sq1a': '',
		'sq1b': '',
		'sq1c': '',
		'sq2a': '',
		'sq2b': '',
		'sq2c': '',
		'sq3a': '',
		'sq3b': '',
		'sq3c': ''
	} );
});

// Square 1A
document.getElementById("sq1a").addEventListener('click', function () {
  if (counter % 2 === 0 && sq1a.innerHTML === '') { // if counter is even
    row1x++;
    columnAx++;
    diagonal1x++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq1a': 'x'} );
  } else if (sq1a.innerHTML === '') { // if counter is odd
    row1o++;
    columnAo++;
    diagonal1o++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq1a': 'o'} );
  }
});

document.getElementById("sq1b").addEventListener('click', function () {
  if (counter % 2 === 0 && sq1b.innerHTML === '') { // if counter is even
    row1x++;
    columnBx++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq1b': 'x'} );
  } else if (sq1b.innerHTML === '') { // if counter is odd
    row1o++;
    columnBo++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq1b': 'o'} );
  }
});

document.getElementById("sq1c").addEventListener('click', function () {
  if (counter % 2 === 0 && sq1c.innerHTML === '') { // if counter is even
    row1x++;
    columnCx++;
    diagonal2x++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq1c': 'x'} );
  } else if (sq1c.innerHTML === '') { // if counter is odd
    row1o++;
    columnCo++;
    diagonal2o++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq1c': 'o'} );
  }
});

document.getElementById("sq2a").addEventListener('click', function () {
  if (counter % 2 === 0 && sq2a.innerHTML === '') { // if counter is even
    row2x++;
    columnAx++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq2a': 'x'} );
  } else if (sq2a.innerHTML === '') { // if counter is odd
    row2o++;
    columnAo++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq2a': 'o'} );
  }
});

document.getElementById("sq2b").addEventListener('click', function () {
  if (counter % 2 === 0 && sq2b.innerHTML === '') { // if counter is even
    row2x++;
    columnBx++;
    diagonal1x++;
    diagonal2x++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq2b': 'x'} );
  } else if (sq2b.innerHTML === '') { // if counter is odd
    row2o++;
    columnBo++;
    diagonal1o++;
    diagonal2o++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq2b': 'o'} );
  }
});

document.getElementById("sq2c").addEventListener('click', function () {
  if (counter % 2 === 0 && sq2c.innerHTML === '') { // if counter is even
    row2x++;
    columnCx++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq2c': 'x'} );
  } else if (sq2c.innerHTML === '') { // if counter is odd
    row2o++;
    columnCo++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq2c': 'o'} );
  }
});

document.getElementById("sq3a").addEventListener('click', function () {
  if (counter % 2 === 0 && sq3a.innerHTML === '') { // if counter is even;
    row3x++;
    columnAx++;
    diagonal2x++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq3a': 'x'} );
  } else if (sq3a.innerHTML === '') { // if counter is odd
    row3o++;
    columnAo++;
    diagonal2o++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq3a': 'o'} );
  }
});

document.getElementById("sq3b").addEventListener('click', function () {
  if (counter % 2 === 0 && sq3b.innerHTML === '') { // if counter is even
    row3x++;
    columnBx++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq3b': 'x'} );
  } else if (sq3b.innerHTML === '') { // if counter is odd
    row3o++;
    columnBo++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq3b': 'o'} );
  }
});

document.getElementById("sq3c").addEventListener('click', function () {
  if (counter % 2 === 0 && sq3c.innerHTML === '') { // if counter is even
    row3x++;
    columnCx++;
    diagonal1x++;
    counter++;
    playerX();
		gapi.hangout.data.submitDelta( {'sq3c': 'x'} );
  } else if (sq3c.innerHTML === '') { // if counter is odd
    row3o++;
    columnCo++;
    diagonal1o++;
    counter++;
    playerO();
		gapi.hangout.data.submitDelta( {'sq3c': 'o'} );
  }
});

console.log(gapi.hangout.data);

gapi.hangout.data.onStateChanged.add( function(event) {
	console.log("Zoo!")
	var state = gapi.hangout.data.getState();
	console.log("SQR 1A: " + state.sq1a);
	sq1a.innerHTML = state.sq1a;
	console.log("SQR 1B: " + state.sq1b);
	sq1b.innerHTML = state.sq1b;
	console.log("SQR 1C: " + state.sq1c);
	sq1c.innerHTML = state.sq1c;
  console.log("SQR 2A: " + state.sq2a);
	sq2a.innerHTML = state.sq2a;
	console.log("SQR 2B: " + state.sq2b);
	sq2b.innerHTML = state.sq2b;
	console.log("SQR 2C: " + state.sq2c);
	sq2c.innerHTML = state.sq2c;
	console.log("SQR 3A: " + state.sq3a);
	sq3a.innerHTML = state.sq3a;
	console.log("SQR 3B: " + state.sq3b);
	sq3b.innerHTML = state.sq3b;
  console.log("SQR 3C: " + state.sq3c);
	sq3c.innerHTML = state.sq3c;
} );

gapi.hangout.onApiReady.add(function(eventObj) {
	var state = gapi.hangout.data.getState();
	console.log("SQR 1A: " + state.sq1a);
	console.log("SQR 1B: " + state.sq1b);
	console.log("SQR 1C: " + state.sq1c);
  console.log("SQR 2A: " + state.sq2a);
	console.log("SQR 2B: " + state.sq2b);
	console.log("SQR 2C: " + state.sq2c);
	console.log("SQR 3A: " + state.sq3a);
	console.log("SQR 3B: " + state.sq3b);
  console.log("SQR 3C: " + state.sq3c);

	// Equivalent ways to get the value:
	console.log(state['sq1a']);
	console.log(gapi.hangout.data.getValue('sq1a'));
	console.log(state['sq1b']);
	console.log(gapi.hangout.data.getValue('sq1b'));
});

</script>
</body>
]]>
</Content>
</Module>
