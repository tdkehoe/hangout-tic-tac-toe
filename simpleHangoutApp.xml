<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
	<ModulePrefs title="Hangout Starter">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
	<Content type="html"><![CDATA[
<html>
<style type="text/css">
<!--
	td {
	  border: 2px solid black;
	  font-size: 48pt;
	  text-align: center;
	}

	.square {
	  /*padding: 10px;*/
	  width: 100px;
	  height: 100px;
	}

.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);
  border: 1px solid #bbb;
}
.button:active {
	background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333));
	background: -moz-linear-gradient(bottom, #ddd, #aaa); }
-->
</style>
<body>

	<table>
		<tr>
			<td id="sq1a" class="square"></td>
			<td id="sq1b" class="square"></td>
			<td id="sq1c" class="square"></td>
		</tr>

		<tr>
			<td id="sq2a" class="square"></td>
			<td id="sq2b" class="square"></td>
			<td id="sq2c" class="square"></td>
		</tr>

		<tr>
			<td id="sq3a" class="square"></td>
			<td id="sq3b" class="square"></td>
			<td id="sq3c" class="square"></td>
		</tr>

	</table>

<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
<h3>Hangout Tic Tac Toe App</h3>
<p>
<input class="button" type="button" value="Show participants!" id="showParticipants"
    style="visibility:hidden;"
    onClick="showParticipants()"/>
</p>
<div id="participantsDiv"></div>
<hr>
<div id="myLog"></div>
<hr>
<p><a href="http://developers.google.com/+/hangouts/getting-started">Read the docs</a> to learn more about developing hangouts!</a></p>

<script>
	function showParticipants() {
	  var participants = gapi.hangout.getParticipants();
	  var retVal = '<p>Participants: </p><ul>';
	  for (var index in participants) {
	    var participant = participants[index];
	    if (!participant.person) {
	      retVal += '<li>A participant not running this app</li>';
	    }
	    retVal += '<li>' + participant.person.displayName + '</li>';
	  }
	  retVal += '</ul>';
	  var div = document.getElementById('participantsDiv');
	  div.innerHTML = retVal;
	}
	function init() {
	  // When API is ready...
	  gapi.hangout.onApiReady.add(
	      function(eventObj) {
	        if (eventObj.isApiReady) {
	          document.getElementById('showParticipants')
	            .style.visibility = 'visible';
	        }
	      });
	}
	// Wait for gadget to load.
	gadgets.util.registerOnLoadHandler(init);

	function showParticipants() {
	  var participants = gapi.hangout.getParticipants();
	  var retVal = '<p>Participants: </p><ul>';
	  for (var index in participants) {
	    var participant = participants[index];
	    if (!participant.person) {
	      retVal += '<li>A participant not running this app</li>';
	    }
	    retVal += '<li>' + participant.person.displayName + '</li>';
	  }
	  retVal += '</ul>';

	  var div = document.getElementById('participantsDiv');
	  div.innerHTML = retVal;

	}
	function init() {
	  // When API is ready...
	  gapi.hangout.onApiReady.add(
	      function(eventObj) {
	        if (eventObj.isApiReady) {
	          document.getElementById('showParticipants')
	            .style.visibility = 'visible';
	        }
	      });
	}
	// Wait for gadget to load.
	gadgets.util.registerOnLoadHandler(init);

//Tic-tac-toe

gapi.hangout.onApiReady.add(function(eventObj) {
	console.log("v0.1.22");
	console.log("API ready.");

	var state = gapi.hangout.data.getState();

	gapi.hangout.data.setValue('counter', '0');

	gapi.hangout.data.clearValue('row1x');
	gapi.hangout.data.clearValue('row2x');
	gapi.hangout.data.clearValue('row3x');
	gapi.hangout.data.clearValue('columnAx');
	gapi.hangout.data.clearValue('columnBx');
	gapi.hangout.data.clearValue('columnCx');
	gapi.hangout.data.clearValue('diagonal1x');
	gapi.hangout.data.clearValue('diagonal2x');

	gapi.hangout.data.clearValue('row1o');
	gapi.hangout.data.clearValue('row2o');
	gapi.hangout.data.clearValue('row3o');
	gapi.hangout.data.clearValue('columnAo');
	gapi.hangout.data.clearValue('columnBo');
	gapi.hangout.data.clearValue('columnCo');
	gapi.hangout.data.clearValue('diagonal1o');
	gapi.hangout.data.clearValue('diagonal2o');

	gapi.hangout.data.setValue('sq1a', '');
	gapi.hangout.data.setValue('sq1b', '');
	gapi.hangout.data.setValue('sq1c', '');
	gapi.hangout.data.setValue('sq2a', '');
	gapi.hangout.data.setValue('sq2b', '');
	gapi.hangout.data.setValue('sq2c', '');
	gapi.hangout.data.setValue('sq3a', '');
	gapi.hangout.data.setValue('sq3b', '');
	gapi.hangout.data.setValue('sq3c', '');

	console.log("Variables cleared.");

	console.log("SQR 1A: " + state.sq1a);
	console.log("SQR 1B: " + state.sq1b);
	console.log("SQR 1C: " + state.sq1c);
  console.log("SQR 2A: " + state.sq2a);
	console.log("SQR 2B: " + state.sq2b);
	console.log("SQR 2C: " + state.sq2c);
	console.log("SQR 3A: " + state.sq3a);
	console.log("SQR 3B: " + state.sq3b);
  console.log("SQR 3C: " + state.sq3c);
	console.log("Counter: " + state.counter);

	// Draw x's and o's on board

	gapi.hangout.data.onStateChanged.add( function(event) {
		console.log("Redrawing board");
		console.log("SQR 1A: " + state.sq1a);
		console.log("SQR 1B: " + state.sq1b);
		console.log("SQR 1C: " + state.sq1c);
		console.log("SQR 2A: " + state.sq2a);
		console.log("SQR 2B: " + state.sq2b);
		console.log("SQR 2C: " + state.sq2c);
		console.log("SQR 3A: " + state.sq3a);
		console.log("SQR 3B: " + state.sq3b);
		console.log("SQR 3C: " + state.sq3c);
		sq1a.innerHTML = state.sq1a;
		sq1b.innerHTML = state.sq1b;
		sq1c.innerHTML = state.sq1c;
		sq2a.innerHTML = state.sq2a;
		sq2b.innerHTML = state.sq2b;
		sq2c.innerHTML = state.sq2c;
		sq3a.innerHTML = state.sq3a;
		sq3b.innerHTML = state.sq3b;
		sq3c.innerHTML = state.sq3c;
	});

	var playerX = function () {
		if (state.row1x === 3 || state.row2x === 3 || state.row3x === 3 || state.columnAx === 3 || state.columnBx === 3 || state.columnCx === 3 || state.diagonal1x === 3 || state.diagonal2x === 3) {alert("X wins!"); }
		if (state.counter === 9) {alert("Cat's game."); }
	};

	var playerO = function () {
		if (state.row1o === 3 || state.row2o === 3 || state.row3o === 3 || state.columnAo === 3 || state.columnBo === 3 || state.columnCo === 3 || state.diagonal1o === 3 || state.diagonal2o === 3) {alert("O wins!"); }
		if (state.counter === 9) {alert("Cat's game."); }
	};

	// Square 1A
	document.getElementById("sq1a").addEventListener('click', function () {
		console.log("SQR 1A played");
		if (state.counter % 2 === 0 && sq1a.innerHTML === '') { // if counter is even
			gapi.hangout.data.submitDelta( {'sq1a': 'x'} );

			// var counter = gapi.hangout.data.getValue('counter');
			// console.log(counter, typeof counter);
			// counter = +counter;
			// console.log(counter, typeof counter);
			// counter = counter + 1;
			// console.log(counter, typeof counter);
			// counter = counter.toString();
			// console.log(counter, typeof counter);
			//gapi.hangout.data.submitDelta({'counter': '88'}, []);
			//gapi.hangout.data.setValue('counter', counter);
			// state.counter = counter;
			// console.log(state.counter);

			gapi.hangout.data.setValue('counter', '0');
			var counter = gapi.hangout.data.getValue('counter');
			console.log(counter);

			gapi.hangout.data.submitDelta({'counter': '88'}, []);
			var counter = gapi.hangout.data.getValue('counter');
			console.log(counter);

			gapi.hangout.data.setValue('counter', '43');
			var counter = gapi.hangout.data.getValue('counter');
			console.log(counter);





		} else if (sq1a.innerHTML === '') { // if counter is odd
	    console.log("Counter odd.")
	  }
	});

}); // ends gapi.hangout.onApiReady.add

</script>
</body>
]]>
</Content>
</Module>
